package script

import (
	"github.com/Foxcapades/lib-go-raml-types/v0/pkg/raml"
	"github.com/sirupsen/logrus"
	"gopkg.in/yaml.v2"
	"io/ioutil"
	"os"
)

const generated = `

################################################################################
#                                                                              #
#  DO NOT EDIT THIS FILE; IT WAS GENERATED AUTOMATICALLY.                      #
#  CHANGES MADE HERE WILL BE LOST.                                             #
#                                                                              #
################################################################################

`

func ProcessRaml(path string) string {
	stat, err := os.Stat(path)
	if err == os.ErrNotExist {
		logrus.Fatalf("Provided path does not exist: %s", path)
	} else if err != nil {
		logrus.Fatalf("Could not stat path %s: %s", path, err)
	}

	if !stat.IsDir() {
		logrus.Fatalf("Provided path is not a directory: %s", path)
	}

	files := getFiles(path)
	libs  := make(map[string]*raml.Library, len(files))

	for file := range files {
		bytes, err := ioutil.ReadFile(file)
		if err != nil {
			logrus.Fatalf("Could not read %s: %s", file, err)
		}

		lib := new(raml.Library)
		if err := yaml.Unmarshal(bytes, lib); err != nil {
			logrus.Fatalf("Could not parse %s: %s", file, err)
		}
		libs[file] = lib
	}

	max := merge(files, libs)
	tmp, err := yaml.Marshal(max)
	if err != nil {
		logrus.Fatal(err)
	}

	return raml.HeaderLibrary + generated + string(tmp)
}
